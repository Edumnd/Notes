const是C#中定义常亮的关键字。

使用变量分为3步：声明、赋值、使用。

Console.WriteLine("我今天吃{0}，明天吃{1}。",today,tomorrow);

字符类型 char ，存储用 '' (单引号)括起来的一个字符，例如：char sex='男';//存储性别
字符串类型 string ，存储用“”（双引号）括起来的一串字符，例如：string address="北京市宣武区牛街北口";//存储地址
整数类型 int ，存储整数，例如：int age=23;//存储年龄
双精度浮点型 double ，存储小数，例如：double salary=7991.63;//存储工资
以上四种是最常用的数据类型，其他常用类型，我们会随着课程深入慢慢介绍。

自动类型转换：2种不同类型的数据运算，低精度类型会自动转换为较高精度的类型。

强制类型转换：无法自动转换为我们需要的类型，可以用强制类型转换，比如上例可以这样完成：int i=(int)3.0;

C#标识符的命名规则
程序中的变量名、常量名、类名、方法名，都叫做标识符。
C#有一套标识符的命名规则，如果命名时不遵守规则，就会出错。这套规则简单说有下面三条：
  ①标识符只能由英文字母、数字和下划线组成，不能包含空格和其他字符。
   错误的标识符声明：string $user; //错在使用了其他字符
  ②变量名不能用数字开头。
   错误的标识符声明：double 6h;//错在用数字开头
  ③不能用关键字当变量名。
   错误的标识符声明：char static ;//错在用关键字static做变量名

C#的算术运算符（一）
计算机程序，当然少不了“计算”，要计算就必须了解运算符。今天，我们先学习算术运算符中的加、减、乘、除。

加：+ 。加号有2个用途：当用加号连接两个数字时，会计算出这两个数字的和。比如：Console.WriteLine(9+2.2);//输出11.2
另一种情况，当加号两边包含字符串的时候，会把两边的表达式连接成新的字符串。比如：Console.WriteLine(9+"2.2");//输出92.2，因为"2.2"是字符串，所以9也被转换为"9"，+起的作用是连接字符串

减：- 。减号的作用就是减法。比如：Console.WriteLine(15-23);//输出-8

乘：* 。乘号的作用是求2数的乘积。比如：Console.WriteLine(0.8*3);//输出2.4

除：/ 。除号的作用是求2数相除的商。比如：Console.WriteLine(2/0.5);//输出4.0
但是，2个整数相除，结果仅保留整数部分，小数部分会被舍去。Console.WriteLine(5/10);//输出0


C#的算术运算符（二）
这一节我们学习取余运算符。C#中的取余运算符就是%。
上一节学习的除号，作用是求2个数字相除的商，而取余运算符%的作用是求两个数字相除的余数。比如：
Console.WriteLine(19/5);//求19除以5的商，输出3
Console.WriteLine(19%5);//求19除以5的余数，输出4（商3余4）

编程中，%常常用来检查一个数字是否能被另一个数字整除。比如下面的代码片段：
int number = 29;
Console.WriteLine(number%2);//求number除以2的余数
如果输出0,表示没有余数，即number能够被2整除（是偶数）；如果输出1，表示有余数，即number不能被2整除（是奇数）。

C#的算术运算符（三）
++，叫做自加运算符。比如你今年18岁，明年长了一岁，用代码写出来是这样：age++;与age=age+1;作用相同，都是变量的值+1。
--，叫做自减运算符。

另外，age++;与age--;也可以写作++age;或--age;
但请注意：如果与其他运算在同一语句中，++写在变量前面或后面，算法不一样，请看下例：
Console.WriteLine(age++);作用等同于下面两句：
  Console.WriteLine(age);//先打印
  age=age+1;//后自加

Console.WriteLine(++age);作用等同于下面两句：
  age=age+1;//先自加
  Console.WriteLine(age);//后打印


